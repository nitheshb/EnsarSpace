/* eslint-disable jsx-a11y/click-events-have-key-events */
/* eslint-disable jsx-a11y/no-static-element-interactions */
// import { Link, routes } from '@redwoodjs/router'

import { Fragment, useState, useEffect } from 'react'

// import { XIcon } from '@heroicons/react/outline'
import { DragDropContext, Droppable } from 'react-beautiful-dnd'

import { MetaTags } from '@redwoodjs/web'

import LLeadsTableView from 'src/components/LLeadsTableView/LLeadsTableView'
import { USER_ROLES } from 'src/constants/userRoles'
import { getFinanceTransactionsByStatus } from 'src/context/dbQueryFirebase'
import { useAuth } from 'src/context/firebase-auth-context'
import { CustomSelect } from 'src/util/formFields/selectBoxField'

import CircleProgress from '../Charts_Graphs/CircleProgress'
import SemiCircleProgress from '../Charts_Graphs/SemiCircleProgress'
import CardItem from '../leadsCard'
import SiderForm from '../SiderForm/SiderForm'

import FinanceTableView from './financeTableView'

const OnBoarding = ({ leadsTyper }) => {
  const { user } = useAuth()
  const { orgId } = user
  const [isImportLeadsOpen, setisImportLeadsOpen] = useState(false)

  // kanban board
  const [ready, setReady] = useState(false)

  const [addLeadsTypes, setAddLeadsTypes] = useState('')
  const [selUserProfile, setSelUserProfile] = useState({})
  const [leadsFetchedData, setLeadsFetchedData] = useState([])
  const [serialLeadsData, setSerialLeadsData] = useState([])
  const [projectList, setprojectList] = useState([])
  const [transactionData, setTransactionData] = useState({})

  const [value, setValue] = useState('latest')
  const tabHeadFieldsA = [
    { lab: 'All Transactions', val: 'all' },
    { lab: 'Latest', val: 'latest' },
    { lab: 'Reviewing', val: 'reviewing' },
    { lab: 'Cleared', val: 'cleared' },
    { lab: 'Rejected', val: 'rejected' },
  ]
  useEffect(() => {
    getLeadsDataFun()
  }, [])

  const rowsCounter = (parent, searchKey) => {
    return parent.filter((item) => {
      if (searchKey === 'all') {
        return item
      } else if (item.status.toLowerCase() === searchKey.toLowerCase()) {
        console.log('All1', item)
        return item
      }
    })
  }

  const getLeadsDataFun = async () => {
    console.log('login role detials', user)
    const { access, uid } = user

    if (access?.includes('manage_leads')) {
      const unsubscribe = getFinanceTransactionsByStatus(
        orgId,
        async (querySnapshot) => {
          const usersListA = querySnapshot.docs.map((docSnapshot) => {
            const x = docSnapshot.data()
            x.id = docSnapshot.id
            return x
          })
          // setBoardData
          console.log('my Array data is ', usersListA, leadsFetchedData)
          // await serealizeData(usersListA)
          await setLeadsFetchedData(usersListA)
          await console.log('my Array data is set it', leadsFetchedData)
        },
        {
          status: [
            'latest',
            'reviewing',
            'review',
            'cleared',
            'rejected',
            '',
            // 'booked',
          ],
        },
        () => setLeadsFetchedData([])
      )
      return unsubscribe
    } else {
      const unsubscribe = getFinanceTransactionsByStatus(
        orgId,
        async (querySnapshot) => {
          const usersListA = querySnapshot.docs.map((docSnapshot) => {
            const x = docSnapshot.data()
            x.id = docSnapshot.id
            return x
          })
          // setBoardData
          console.log('my Array data is ', usersListA)
          await serealizeData(usersListA)
          await setLeadsFetchedData(usersListA)
        },
        {
          uid: uid,
          status: [
            'new',
            'reviewing',
            'review',
            'cleared',
            'rejected',
            '',
            // 'booked',
          ],
        },
        () => setLeadsFetchedData([])
      )
      return unsubscribe
    }

    // await console.log('leadsData', leadsData)
  }

  const serealizeData = (array) => {
    // let newData =
    const x = [
      'new',
      'review',
      'cleared',
      'rejected',
      '',
      // 'booked',
    ].map((status) => {
      const items = array.filter((data) => data.Status.toLowerCase() == status)

      return { name: status, items }
    })
    setSerialLeadsData(x)
  }

  const selUserProfileF = (title, data) => {
    setAddLeadsTypes(title)
    setisImportLeadsOpen(true)
    setSelUserProfile(data)
  }

  const viewTransaction = (docData) => {
    setTransactionData(docData)
    setisImportLeadsOpen(!isImportLeadsOpen)
  }
  return (
    <>
          <div className="">
            <div className="">
          <div
            className="
            "
          >
            {/* <div className="items-center justify-between rounded-md mx-1 my-1 py-2 px-2 bg-white "> */}
              {/* <div>
                <h2 className="text-lg font-semibold text-gray-900 leading-light py-2 ">
                  Accounts Transactions Space
                </h2>
              </div> */}
               {/* <div className="flex flex-row"> */}
                {/* <section className="min-w-[100px]">
                <h5>Weekly Progress</h5>
                  <CircleProgress />
                </section> */}
                {/* <SemiCircleProgress /> */}
                {/* <div className="flex flex-col"> */}
                   {/* <div className="flex flex-row">
                    <h2 className="headTxt1 font-semibold text-[11px] ">
                      TOTAL COLLECTION
                    </h2>
                    <span className="headTxt1 font-semibold text-[11px] ml-4 bg-[#d6e9ed] text-[#53a0a3] px-2 rounded-md ">
                      10
                    </span>
                  </div> */}
                  <section className="flex flex-row justify-between">
                      <div className=" m-1">
                          <div className=" border-[#E5EAF2] rounded-xl border w-60 h-40 bg-white px-8 py-5 ">
                          <section>







                                           <svg width="54.46px" height="37.42px" position="absolute"  left="0px" top="0px" viewBox="0 0 43 41" fill="none" xmlns="http://www.w3.org/2000/svg">


                                          <path d="M38.5153 9.55307C38.5153 8.23331 37.9568 6.9676 36.9626 6.03439C35.9683 5.10118 34.6199 4.5769 33.2139 4.5769H9.35756C7.95154 4.5769 6.60311 5.10118 5.6089 6.03439C4.61469 6.9676 4.05615 8.23331 4.05615 9.55307V21.9935H38.5153V9.55307Z" fill="#EEE5FF"/>
                                             <path d="M4.05615 21.9937V24.4817C4.05615 25.8015 4.61469 27.0672 5.6089 28.0004C6.60311 28.9336 7.95154 29.4579 9.35756 29.4579H33.2139C34.6199 29.4579 35.9683 28.9336 36.9626 28.0004C37.9568 27.0672 38.5153 25.8015 38.5153 24.4817V21.9937H4.05615ZM17.3097 36.9222L18.635 29.4579H23.9497L25.2618 36.9222H17.3097Z" fill="#D1C3FC"/>
                                           <path d="M33.214 30.7019H9.35772C7.60019 30.7019 5.91465 30.0466 4.67189 28.8801C3.42913 27.7136 2.73096 26.1314 2.73096 24.4817V9.55322C2.73096 7.90352 3.42913 6.32138 4.67189 5.15487C5.91465 3.98835 7.60019 3.33301 9.35772 3.33301H33.214C34.9716 3.33301 36.6571 3.98835 37.8999 5.15487C39.1426 6.32138 39.8408 7.90352 39.8408 9.55322V24.4817C39.8408 25.2986 39.6694 26.1074 39.3364 26.8621C39.0033 27.6168 38.5152 28.3025 37.8999 28.8801C37.2845 29.4577 36.554 29.9158 35.75 30.2284C34.946 30.541 34.0843 30.7019 33.214 30.7019ZM9.35772 5.82109C8.3032 5.82109 7.29188 6.2143 6.54622 6.91421C5.80057 7.61412 5.38166 8.5634 5.38166 9.55322V24.4817C5.38166 25.4715 5.80057 26.4208 6.54622 27.1207C7.29188 27.8206 8.3032 28.2138 9.35772 28.2138H33.214C34.2686 28.2138 35.2799 27.8206 36.0255 27.1207C36.7712 26.4208 37.1901 25.4715 37.1901 24.4817V9.55322C37.1901 8.5634 36.7712 7.61412 36.0255 6.91421C35.2799 6.2143 34.2686 5.82109 33.214 5.82109H9.35772Z" fill="#2B3145"/>
                                              <path d="M33.214 23.2376H4.05631C3.7048 23.2376 3.3677 23.1065 3.11914 22.8732C2.87059 22.6399 2.73096 22.3235 2.73096 21.9936C2.73096 21.6636 2.87059 21.3472 3.11914 21.1139C3.3677 20.8806 3.7048 20.7495 4.05631 20.7495H33.214C33.5656 20.7495 33.9027 20.8806 34.1512 21.1139C34.3998 21.3472 34.5394 21.6636 34.5394 21.9936C34.5394 22.3235 34.3998 22.6399 34.1512 22.8732C33.9027 23.1065 33.5656 23.2376 33.214 23.2376ZM27.9126 38.1661H14.6591C14.3076 38.1661 13.9705 38.035 13.722 37.8017C13.4734 37.5684 13.3338 37.252 13.3338 36.9221C13.3338 36.5921 13.4734 36.2757 13.722 36.0424C13.9705 35.8091 14.3076 35.678 14.6591 35.678H27.9126C28.2641 35.678 28.6013 35.8091 28.8498 36.0424C29.0984 36.2757 29.238 36.5921 29.238 36.9221C29.238 37.252 29.0984 37.5684 28.8498 37.8017C28.6013 38.035 28.2641 38.1661 27.9126 38.1661Z" fill="#2B3145"/>
                                               <path d="M17.3096 38.1662H17.0976C16.9225 38.142 16.7544 38.0852 16.6032 37.9992C16.4519 37.9131 16.3205 37.7995 16.2167 37.665C16.113 37.5305 16.039 37.3778 15.999 37.2161C15.9591 37.0543 15.9541 36.8867 15.9843 36.7231L17.3096 29.2588C17.3375 29.0954 17.3993 28.9388 17.4917 28.7979C17.584 28.657 17.705 28.5345 17.8478 28.4374C17.9905 28.3404 18.1522 28.2707 18.3237 28.2323C18.4952 28.194 18.673 28.1877 18.847 28.2138C19.0211 28.24 19.1879 28.298 19.3381 28.3847C19.4882 28.4714 19.6187 28.5849 19.7221 28.7189C19.8255 28.8529 19.8997 29.0047 19.9406 29.1657C19.9815 29.3266 19.9882 29.4935 19.9603 29.6569L18.635 37.1212C18.5842 37.4155 18.4224 37.683 18.1791 37.8748C17.9359 38.0666 17.6273 38.17 17.3096 38.1662ZM25.2617 38.1662C24.9441 38.17 24.6355 38.0666 24.3922 37.8748C24.149 37.683 23.9872 37.4155 23.9364 37.1212L22.611 29.6569C22.5832 29.4935 22.5899 29.3266 22.6308 29.1657C22.6716 29.0047 22.7459 28.8529 22.8493 28.7189C22.9527 28.5849 23.0831 28.4714 23.2333 28.3847C23.3834 28.298 23.5503 28.24 23.7243 28.2138C23.8984 28.1877 24.0762 28.194 24.2477 28.2323C24.4191 28.2707 24.5808 28.3404 24.7236 28.4374C24.8664 28.5345 24.9874 28.657 25.0797 28.7979C25.172 28.9388 25.2339 29.0954 25.2617 29.2588L26.5871 36.7231C26.6173 36.8867 26.6123 37.0543 26.5723 37.2161C26.5324 37.3778 26.4584 37.5305 26.3546 37.665C26.2509 37.7995 26.1195 37.9131 25.9682 37.9992C25.8169 38.0852 25.6488 38.142 25.4738 38.1662H25.2617Z" fill="#2B3145"/>
                                                  <path d="M21.2858 26.9698C22.0178 26.9698 22.6112 26.4128 22.6112 25.7257C22.6112 25.0387 22.0178 24.4817 21.2858 24.4817C20.5538 24.4817 19.9604 25.0387 19.9604 25.7257C19.9604 26.4128 20.5538 26.9698 21.2858 26.9698Z" fill="#8B50FF"/>
                                                 </svg>








                     <div className="px-1  flex flex-row justify-between">
                              <h3 className="width=10 height=5 line-height=3.5 left=0 top=0 text-[black] text-[10px]">Laptop</h3>
                             </div>

                              <span className="line-height=0.1 px-2 text-[black] text-[8px]">
                                  Windows
                                </span>












                            {/* <div
                              className="flex flex-row justify-between bg-[#F7F7F7]"
                              style={{
                                borderBottomLeftRadius: '12px',
                                borderBottomRightRadius: '12px',
                              }}
                            >
                              <div className=" flexCenter p-2">
                                <span className="w-2 h-2 rounded-full bg-[#209653]"></span>
                                <svg
                              className="svgIcon text-[#209653] text-[14px] "
                              focusable="false"
                              viewBox="0 0 24 24"
                              aria-hidden="true"
                              data-testid="ArrowUpwardIcon"
                            >
                              <path d="m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"></path>
                            </svg>

                                <span className="css-1lpgd8m text-[#209653] text-[10px]">
                                  CLEARED (2)
                                </span>
                              </div>
                            </div> */}
                          </section>
                        </div>
                      </div>
                      <div className=" m-1">
                        <div className=" border-[#E5EAF2] rounded-xl border w-60 h-40 bg-white px-8 py-5">
                          <section>
                            {/* <small className="px-2 css-17tn7gx">$</small> */}
                            {/* <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 384 512"
                            Width="60"
                            height="70"
                            >
                              <path d="M16 64C16 28.7 44.7 0 80 0H304c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H80c-35.3 0-64-28.7-64-64V64zM224 448a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM304 64H80V384H304V64z"/>
                            </svg> */}
                                 {/*
                                 <svg width="234" height="153" viewBox="0 0 234 153" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <rect x="0.885742" width="232.885" height="153" rx="11.2929" fill="white"/>
                                  <g clip-path="url(#clip0_77_21454)">
                                   <path d="M32.967 53.3334C33.8366 53.3416 34.6968 53.1536 35.4837 52.7834C35.7006 52.638 35.9558 52.5603 36.217 52.5603C36.4782 52.5603 36.7334 52.638 36.9503 52.7834C37.7357 53.1599 38.5961 53.3537 39.467 53.3501C41.3837 53.3501 43.4337 50.4334 44.2837 47.6167C44.3185 47.5015 44.328 47.3801 44.3114 47.2609C44.2948 47.1416 44.2526 47.0274 44.1877 46.926C44.1228 46.8246 44.0366 46.7385 43.9352 46.6737C43.8338 46.6088 43.7196 46.5666 43.6003 46.5501C43.0385 46.4861 42.5185 46.2218 42.1358 45.8054C41.7531 45.3891 41.5334 44.8487 41.517 44.2834C41.523 43.7886 41.6884 43.309 41.9886 42.9156C42.2889 42.5223 42.708 42.2363 43.1837 42.1001C43.3065 42.0617 43.4188 41.9954 43.5117 41.9064C43.6047 41.8173 43.6757 41.708 43.7193 41.5869C43.7629 41.4658 43.7778 41.3363 43.763 41.2084C43.7481 41.0806 43.7039 40.9579 43.6337 40.8501C43.2399 40.1741 42.6978 39.5963 42.0482 39.1603C41.3986 38.7244 40.6585 38.4416 39.8837 38.3334C39.1248 38.3716 38.3768 38.5291 37.667 38.8001C37.218 38.9724 36.7465 39.0791 36.267 39.1167C35.7875 39.0791 35.316 38.9724 34.867 38.8001C34.1308 38.5204 33.354 38.3627 32.567 38.3334C30.617 38.3334 27.667 40.8501 27.667 44.6501C27.667 48.4501 30.417 53.3334 32.967 53.3334ZM36.8337 36.6667C37.3808 36.6667 37.9227 36.559 38.4282 36.3496C38.9337 36.1402 39.393 35.8333 39.7799 35.4464C40.1668 35.0594 40.4738 34.6001 40.6832 34.0946C40.8926 33.5891 41.0003 33.0473 41.0003 32.5001C41.0003 32.2791 40.9125 32.0671 40.7562 31.9108C40.6 31.7545 40.388 31.6667 40.167 31.6667C39.0619 31.6667 38.0021 32.1057 37.2207 32.8871C36.4393 33.6685 36.0003 34.7283 36.0003 35.8334C36.0003 36.0544 36.0881 36.2664 36.2444 36.4227C36.4007 36.579 36.6126 36.6667 36.8337 36.6667Z" fill="#8B50FF"/>
                                    <path d="M46.0003 25H26.0003C25.1163 25 24.2684 25.3512 23.6433 25.9763C23.0182 26.6014 22.667 27.4493 22.667 28.3333V61.6667C22.667 62.5507 23.0182 63.3986 23.6433 64.0237C24.2684 64.6488 25.1163 65 26.0003 65H46.0003C46.8844 65 47.7322 64.6488 48.3573 64.0237C48.9825 63.3986 49.3337 62.5507 49.3337 61.6667V28.3333C49.3337 27.4493 48.9825 26.6014 48.3573 25.9763C47.7322 25.3512 46.8844 25 46.0003 25ZM36.0003 62.5C35.6707 62.5 35.3485 62.4023 35.0744 62.2191C34.8003 62.036 34.5867 61.7757 34.4605 61.4711C34.3344 61.1666 34.3014 60.8315 34.3657 60.5082C34.43 60.1849 34.5887 59.8879 34.8218 59.6548C35.0549 59.4217 35.3519 59.263 35.6752 59.1987C35.9985 59.1344 36.3336 59.1674 36.6381 59.2935C36.9427 59.4197 37.203 59.6333 37.3861 59.9074C37.5692 60.1815 37.667 60.5037 37.667 60.8333C37.667 61.2754 37.4914 61.6993 37.1788 62.0118C36.8663 62.3244 36.4424 62.5 36.0003 62.5ZM46.0003 56.6667H26.0003V28.3333H46.0003V56.6667Z" fill="#303C42"/>
                                         </g>
                                      <path opacity="0.8" d="M24.7819 108.28V117.835H23.6249V108.28H24.7819ZM26.9526 120.522V110.669H28.0164V111.807H28.147C28.2279 111.683 28.3399 111.524 28.483 111.331C28.6292 111.135 28.8376 110.961 29.1082 110.808C29.3819 110.653 29.752 110.575 30.2186 110.575C30.822 110.575 31.3539 110.726 31.8143 111.028C32.2746 111.329 32.6339 111.757 32.892 112.311C33.1502 112.864 33.2793 113.518 33.2793 114.27C33.2793 115.029 33.1502 115.687 32.892 116.244C32.6339 116.798 32.2762 117.227 31.8189 117.532C31.3617 117.833 30.8345 117.984 30.2373 117.984C29.7769 117.984 29.4083 117.908 29.1315 117.756C28.8547 117.6 28.6416 117.424 28.4923 117.228C28.343 117.029 28.2279 116.865 28.147 116.734H28.0537V120.522H26.9526ZM28.0351 114.252C28.0351 114.793 28.1144 115.27 28.273 115.684C28.4317 116.095 28.6634 116.417 28.9682 116.65C29.273 116.88 29.6463 116.995 30.088 116.995C30.5483 116.995 30.9324 116.874 31.2404 116.631C31.5514 116.385 31.7847 116.056 31.9402 115.642C32.0989 115.225 32.1782 114.762 32.1782 114.252C32.1782 113.748 32.1004 113.294 31.9449 112.889C31.7925 112.482 31.5608 112.16 31.2497 111.924C30.9418 111.684 30.5545 111.564 30.088 111.564C29.6401 111.564 29.2637 111.678 28.9589 111.905C28.654 112.129 28.4239 112.443 28.2684 112.847C28.1128 113.249 28.0351 113.717 28.0351 114.252ZM36.06 113.524V117.835H34.9589V108.28H36.06V111.788H36.1533C36.3213 111.418 36.5732 111.124 36.9092 110.906C37.2482 110.686 37.6992 110.575 38.2622 110.575C38.7505 110.575 39.1782 110.673 39.5453 110.869C39.9123 111.062 40.1969 111.359 40.3991 111.76C40.6044 112.158 40.707 112.665 40.707 113.281V117.835H39.6059V113.356C39.6059 112.787 39.4582 112.347 39.1627 112.036C38.8703 111.721 38.4644 111.564 37.9449 111.564C37.5841 111.564 37.2606 111.641 36.9745 111.793C36.6914 111.945 36.4675 112.168 36.3026 112.46C36.1409 112.753 36.06 113.107 36.06 113.524ZM45.6328 117.984C44.9858 117.984 44.4181 117.83 43.9298 117.522C43.4446 117.214 43.0651 116.784 42.7914 116.23C42.5208 115.676 42.3855 115.029 42.3855 114.289C42.3855 113.543 42.5208 112.891 42.7914 112.334C43.0651 111.777 43.4446 111.345 43.9298 111.037C44.4181 110.729 44.9858 110.575 45.6328 110.575C46.2797 110.575 46.8458 110.729 47.3311 111.037C47.8194 111.345 48.1989 111.777 48.4695 112.334C48.7432 112.891 48.8801 113.543 48.8801 114.289C48.8801 115.029 48.7432 115.676 48.4695 116.23C48.1989 116.784 47.8194 117.214 47.3311 117.522C46.8458 117.83 46.2797 117.984 45.6328 117.984ZM45.6328 116.995C46.1242 116.995 46.5286 116.869 46.8458 116.617C47.1631 116.365 47.3979 116.034 47.5504 115.623C47.7028 115.213 47.779 114.768 47.779 114.289C47.779 113.81 47.7028 113.364 47.5504 112.95C47.3979 112.536 47.1631 112.202 46.8458 111.947C46.5286 111.692 46.1242 111.564 45.6328 111.564C45.1413 111.564 44.737 111.692 44.4197 111.947C44.1024 112.202 43.8676 112.536 43.7152 112.95C43.5628 113.364 43.4866 113.81 43.4866 114.289C43.4866 114.768 43.5628 115.213 43.7152 115.623C43.8676 116.034 44.1024 116.365 44.4197 116.617C44.737 116.869 45.1413 116.995 45.6328 116.995ZM51.662 113.524V117.835H50.5609V110.669H51.6246V111.788H51.718C51.8859 111.424 52.141 111.132 52.4831 110.911C52.8253 110.687 53.267 110.575 53.8082 110.575C54.2934 110.575 54.718 110.675 55.0819 110.874C55.4458 111.07 55.7289 111.368 55.931 111.77C56.1332 112.168 56.2343 112.672 56.2343 113.281V117.835H55.1332V113.356C55.1332 112.793 54.987 112.354 54.6946 112.04C54.4023 111.723 54.001 111.564 53.4909 111.564C53.1394 111.564 52.8253 111.641 52.5484 111.793C52.2747 111.945 52.0586 112.168 51.8999 112.46C51.7413 112.753 51.662 113.107 51.662 113.524ZM61.2511 117.984C60.5605 117.984 59.9649 117.832 59.4641 117.527C58.9664 117.219 58.5823 116.79 58.3117 116.239C58.0442 115.686 57.9105 115.042 57.9105 114.308C57.9105 113.574 58.0442 112.927 58.3117 112.367C58.5823 111.804 58.9587 111.365 59.4408 111.051C59.926 110.734 60.4921 110.575 61.1391 110.575C61.5123 110.575 61.8809 110.637 62.2449 110.762C62.6088 110.886 62.94 111.088 63.2386 111.368C63.5372 111.645 63.7752 112.012 63.9525 112.469C64.1298 112.927 64.2184 113.49 64.2184 114.158V114.625H58.6943V113.673H63.0987C63.0987 113.269 63.0178 112.908 62.8561 112.591C62.6974 112.273 62.4704 112.023 62.1749 111.84C61.8825 111.656 61.5372 111.564 61.1391 111.564C60.7005 111.564 60.321 111.673 60.0007 111.891C59.6834 112.106 59.4392 112.385 59.2682 112.731C59.0971 113.076 59.0115 113.446 59.0115 113.841V114.476C59.0115 115.017 59.1049 115.476 59.2915 115.852C59.4812 116.225 59.7441 116.51 60.08 116.706C60.4159 116.899 60.8063 116.995 61.2511 116.995C61.5403 116.995 61.8016 116.955 62.0349 116.874C62.2713 116.79 62.475 116.665 62.6461 116.501C62.8172 116.333 62.9494 116.124 63.0427 115.875L64.1064 116.174C63.9945 116.535 63.8063 116.852 63.5419 117.126C63.2775 117.396 62.9509 117.608 62.5621 117.76C62.1733 117.91 61.7363 117.984 61.2511 117.984Z" fill="#313131"/>
                                       <path d="M23.2596 98.5059V85.3886H28.1786C29.1863 85.3886 30.0317 85.5765 30.7149 85.9523C31.4024 86.328 31.9212 86.8447 32.2713 87.5022C32.6257 88.1555 32.8029 88.8985 32.8029 89.7311C32.8029 90.5723 32.6257 91.3196 32.2713 91.9729C31.9169 92.6262 31.3938 93.1407 30.7021 93.5164C30.0104 93.8879 29.1585 94.0737 28.1466 94.0737H24.8865V92.1202H27.8263C28.4156 92.1202 28.8981 92.0177 29.2738 91.8127C29.6496 91.6078 29.9271 91.326 30.1065 90.9673C30.2901 90.6086 30.3819 90.1966 30.3819 89.7311C30.3819 89.2657 30.2901 88.8558 30.1065 88.5014C29.9271 88.147 29.6474 87.8716 29.2674 87.6752C28.8917 87.4745 28.407 87.3741 27.8135 87.3741H25.6358V98.5059H23.2596ZM37.083 92.7414V98.5059H34.7644V85.3886H37.0318V90.3396H37.147C37.3776 89.7845 37.7342 89.3468 38.2167 89.0266C38.7034 88.7021 39.3226 88.5398 40.0741 88.5398C40.7573 88.5398 41.3529 88.6829 41.861 88.969C42.3692 89.255 42.762 89.6735 43.0395 90.2243C43.3214 90.7751 43.4623 91.4477 43.4623 92.2419V98.5059H41.1437V92.6005C41.1437 91.9387 40.9729 91.4242 40.6313 91.057C40.294 90.6855 39.82 90.4997 39.2094 90.4997C38.7995 90.4997 38.4323 90.5894 38.1078 90.7687C37.7875 90.9438 37.5356 91.1979 37.352 91.5309C37.1727 91.864 37.083 92.2675 37.083 92.7414ZM50.117 98.698C49.1562 98.698 48.3236 98.4866 47.6191 98.0639C46.9145 97.6412 46.368 97.0498 45.9794 96.2898C45.5951 95.5297 45.403 94.6416 45.403 93.6253C45.403 92.6091 45.5951 91.7188 45.9794 90.9545C46.368 90.1902 46.9145 89.5966 47.6191 89.1739C48.3236 88.7512 49.1562 88.5398 50.117 88.5398C51.0777 88.5398 51.9103 88.7512 52.6149 89.1739C53.3194 89.5966 53.8638 90.1902 54.2481 90.9545C54.6367 91.7188 54.831 92.6091 54.831 93.6253C54.831 94.6416 54.6367 95.5297 54.2481 96.2898C53.8638 97.0498 53.3194 97.6412 52.6149 98.0639C51.9103 98.4866 51.0777 98.698 50.117 98.698ZM50.1298 96.8406C50.6507 96.8406 51.0862 96.6975 51.4364 96.4115C51.7865 96.1211 52.047 95.7325 52.2178 95.2458C52.3928 94.759 52.4804 94.2167 52.4804 93.6189C52.4804 93.0169 52.3928 92.4724 52.2178 91.9857C52.047 91.4946 51.7865 91.1039 51.4364 90.8136C51.0862 90.5232 50.6507 90.378 50.1298 90.378C49.596 90.378 49.152 90.5232 48.7976 90.8136C48.4474 91.1039 48.1848 91.4946 48.0098 91.9857C47.839 92.4724 47.7536 93.0169 47.7536 93.6189C47.7536 94.2167 47.839 94.759 48.0098 95.2458C48.1848 95.7325 48.4474 96.1211 48.7976 96.4115C49.152 96.6975 49.596 96.8406 50.1298 96.8406ZM59.1175 92.7414V98.5059H56.7989V88.6679H59.015V90.3396H59.1303C59.3566 89.7888 59.7174 89.3511 60.2127 89.0266C60.7123 88.7021 61.3293 88.5398 62.0637 88.5398C62.7426 88.5398 63.334 88.685 63.8379 88.9754C64.346 89.2657 64.7388 89.6863 65.0164 90.2371C65.2982 90.788 65.437 91.4562 65.4327 92.2419V98.5059H63.1141V92.6005C63.1141 91.943 62.9433 91.4284 62.6017 91.057C62.2644 90.6855 61.7968 90.4997 61.199 90.4997C60.7934 90.4997 60.4326 90.5894 60.1166 90.7687C59.8049 90.9438 59.5594 91.1979 59.3801 91.5309C59.205 91.864 59.1175 92.2675 59.1175 92.7414ZM72.145 98.698C71.1587 98.698 70.3068 98.493 69.5895 98.0831C68.8764 97.669 68.3277 97.084 67.9434 96.3282C67.5591 95.5681 67.367 94.6736 67.367 93.6445C67.367 92.6326 67.5591 91.7444 67.9434 90.9801C68.332 90.2115 68.8743 89.6137 69.5703 89.1867C70.2663 88.7555 71.0839 88.5398 72.0233 88.5398C72.6297 88.5398 73.2018 88.638 73.7398 88.8345C74.2821 89.0266 74.7604 89.3255 75.1745 89.7311C75.593 90.1368 75.9218 90.6534 76.1609 91.2811C76.4 91.9045 76.5196 92.6475 76.5196 93.51V94.221H68.4558V92.6582H74.2971C74.2928 92.2141 74.1967 91.8191 74.0088 91.4733C73.821 91.1231 73.5584 90.8477 73.221 90.647C72.888 90.4464 72.4994 90.346 72.0554 90.346C71.5814 90.346 71.1651 90.4613 70.8064 90.6919C70.4477 90.9182 70.168 91.2171 69.9674 91.5886C69.7709 91.9558 69.6706 92.3593 69.6663 92.7991V94.1633C69.6663 94.7355 69.7709 95.2265 69.9802 95.6365C70.1894 96.0421 70.4819 96.3538 70.8576 96.5716C71.2334 96.7851 71.6732 96.8918 72.177 96.8918C72.5144 96.8918 72.8197 96.8449 73.0929 96.7509C73.3662 96.6527 73.6032 96.5097 73.8039 96.3218C74.0046 96.1339 74.1562 95.9012 74.2586 95.6237L76.4235 95.867C76.2869 96.4392 76.0264 96.9388 75.6421 97.3658C75.2621 97.7885 74.7753 98.1173 74.1818 98.3521C73.5883 98.5827 72.9093 98.698 72.145 98.698Z" fill="black"/>
                                       <path d="M199.014 49.2498C197.96 49.2498 197.054 48.9829 196.299 48.4492C195.547 47.9112 194.968 47.1362 194.563 46.1242C194.161 45.108 193.961 43.8846 193.961 42.4542C193.965 41.0238 194.168 39.8068 194.569 38.8034C194.975 37.7957 195.553 37.0271 196.305 36.4976C197.061 35.9682 197.964 35.7034 199.014 35.7034C200.065 35.7034 200.968 35.9682 201.723 36.4976C202.479 37.0271 203.058 37.7957 203.459 38.8034C203.865 39.8111 204.068 41.028 204.068 42.4542C204.068 43.8889 203.865 45.1144 203.459 46.1306C203.058 47.1426 202.479 47.9154 201.723 48.4492C200.972 48.9829 200.069 49.2498 199.014 49.2498ZM199.014 47.2451C199.834 47.2451 200.481 46.8415 200.955 46.0345C201.433 45.2232 201.672 44.0298 201.672 42.4542C201.672 41.4123 201.563 40.537 201.346 39.8282C201.128 39.1194 200.82 38.5856 200.423 38.227C200.026 37.864 199.556 37.6825 199.014 37.6825C198.199 37.6825 197.554 38.0882 197.08 38.8995C196.606 39.7065 196.367 40.8914 196.363 42.4542C196.358 43.5003 196.463 44.3799 196.676 45.093C196.894 45.8061 197.202 46.3441 197.599 46.707C197.996 47.0657 198.468 47.2451 199.014 47.2451Z" fill="black"/>
                                        <defs>
                                            <clipPath id="clip0_77_21454">
                                            <rect width="40" height="40" fill="white" transform="translate(16 25)"/>
                                           </clipPath>
                                              </defs>
                                               </svg> */}


                                      <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <g clip-path="url(#clip0_77_21456)">
                                     <path d="M16.967 28.3334C17.8366 28.3416 18.6968 28.1536 19.4837 27.7834C19.7006 27.638 19.9558 27.5603 20.217 27.5603C20.4782 27.5603 20.7334 27.638 20.9503 27.7834C21.7357 28.1599 22.5961 28.3537 23.467 28.3501C25.3837 28.3501 27.4337 25.4334 28.2837 22.6167C28.3185 22.5015 28.328 22.3801 28.3114 22.2609C28.2948 22.1416 28.2526 22.0274 28.1877 21.926C28.1228 21.8246 28.0366 21.7385 27.9352 21.6737C27.8338 21.6088 27.7196 21.5666 27.6003 21.5501C27.0385 21.4861 26.5185 21.2218 26.1358 20.8054C25.7531 20.3891 25.5334 19.8487 25.517 19.2834C25.523 18.7886 25.6884 18.309 25.9886 17.9156C26.2889 17.5223 26.708 17.2363 27.1837 17.1001C27.3065 17.0617 27.4188 16.9954 27.5117 16.9064C27.6047 16.8173 27.6757 16.708 27.7193 16.5869C27.7629 16.4658 27.7778 16.3363 27.763 16.2084C27.7481 16.0806 27.7039 15.9579 27.6337 15.8501C27.2399 15.1741 26.6978 14.5963 26.0482 14.1603C25.3986 13.7244 24.6585 13.4416 23.8837 13.3334C23.1248 13.3716 22.3768 13.5291 21.667 13.8001C21.218 13.9724 20.7465 14.0791 20.267 14.1167C19.7875 14.0791 19.316 13.9724 18.867 13.8001C18.1308 13.5204 17.354 13.3627 16.567 13.3334C14.617 13.3334 11.667 15.8501 11.667 19.6501C11.667 23.4501 14.417 28.3334 16.967 28.3334ZM20.8337 11.6667C21.3808 11.6667 21.9227 11.559 22.4282 11.3496C22.9337 11.1402 23.393 10.8333 23.7799 10.4464C24.1668 10.0594 24.4738 9.60012 24.6832 9.0946C24.8926 8.58907 25.0003 8.04726 25.0003 7.50008C25.0003 7.27907 24.9125 7.06711 24.7562 6.91083C24.6 6.75455 24.388 6.66675 24.167 6.66675C23.0619 6.66675 22.0021 7.10573 21.2207 7.88714C20.4393 8.66854 20.0003 9.72835 20.0003 10.8334C20.0003 11.0544 20.0881 11.2664 20.2444 11.4227C20.4007 11.579 20.6126 11.6667 20.8337 11.6667Z" fill="#8B50FF"/>
                                       <path d="M30.0003 0H10.0003C9.11627 0 8.26842 0.35119 7.6433 0.976311C7.01818 1.60143 6.66699 2.44928 6.66699 3.33333V36.6667C6.66699 37.5507 7.01818 38.3986 7.6433 39.0237C8.26842 39.6488 9.11627 40 10.0003 40H30.0003C30.8844 40 31.7322 39.6488 32.3573 39.0237C32.9825 38.3986 33.3337 37.5507 33.3337 36.6667V3.33333C33.3337 2.44928 32.9825 1.60143 32.3573 0.976311C31.7322 0.35119 30.8844 0 30.0003 0ZM20.0003 37.5C19.6707 37.5 19.3485 37.4023 19.0744 37.2191C18.8003 37.036 18.5867 36.7757 18.4605 36.4711C18.3344 36.1666 18.3014 35.8315 18.3657 35.5082C18.43 35.1849 18.5887 34.8879 18.8218 34.6548C19.0549 34.4217 19.3519 34.263 19.6752 34.1987C19.9985 34.1344 20.3336 34.1674 20.6381 34.2935C20.9427 34.4197 21.203 34.6333 21.3861 34.9074C21.5692 35.1815 21.667 35.5037 21.667 35.8333C21.667 36.2754 21.4914 36.6993 21.1788 37.0118C20.8663 37.3244 20.4424 37.5 20.0003 37.5ZM30.0003 31.6667H10.0003V3.33333H30.0003V31.6667Z" fill="#303C42"/>
                                            </g>
                                              <defs>
                                           <clipPath id="clip0_77_21456">
                                                     <rect width="40" height="40" fill="white"/>
                                                    </clipPath>
                                             </defs>
                                              </svg>



                            <div className="px-2 flex flex-row justify-between">
                              <h3 className=" css-5mn5yy">Phone</h3>
                            </div>
                            <span className="css-1lpgd8m px-3 text-[black] text-[10px]">
                                  Iphone
                                </span>
                            {/* <div
                              className="flex flex-row justify-between bg-[#F7F7F7]"
                              style={{
                                borderBottomLeftRadius: '12px',
                                borderBottomRightRadius: '12px',
                              }}
                            >
                              <div className=" flexCenter p-2">
                                <span className="w-2 h-2 rounded-full bg-[#F59A4C]"></span>
                                 <svg
                              className="svgIcon text-[#209653] text-[14px] "
                              focusable="false"
                              viewBox="0 0 24 24"
                              aria-hidden="true"
                              data-testid="ArrowUpwardIcon"
                            >
                              <path d="m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"></path>
                            </svg>

                                <span className="css-1lpgd8m text-[#F59A4C] text-[10px]">
                                  PENDING (4)
                                </span>
                              </div>
                            </div> */}
                          </section>
                        </div>
                      </div>
                      <div className=" m-1">
                        <div className=" border-[#E5EAF2] rounded-xl border w-60 h-40 bg-white px-8 py-5">
                          <section>
                            {/* <small className="px-2 css-17tn7gx">$</small> */}
                            {/* <svg
                            xmlns="http://www.w3.org/2000/svg"
                            viewBox="0 0 384 512"
                             width="60"
                             height="70"
                            >
                              <path d="M80 0C44.7 0 16 28.7 16 64V448c0 35.3 28.7 64 64 64H304c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H80zm80 432h64c8.8 0 16 7.2 16 16s-7.2 16-16 16H160c-8.8 0-16-7.2-16-16s7.2-16 16-16z"/>
                            </svg> */}

                               <svg width="48" height="40" viewBox="0 0 48 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                     <path d="M15.4589 19.9999H21.3339C21.5936 19.9999 21.8427 19.9121 22.0263 19.7559C22.2099 19.5996 22.3131 19.3876 22.3131 19.1666V14.3333C22.314 14.2176 22.2866 14.103 22.2327 13.9969C22.1787 13.8907 22.0994 13.7952 21.9998 13.7166C21.8971 13.6374 21.7762 13.5772 21.6447 13.5399C21.5132 13.5026 21.374 13.489 21.236 13.4999L15.361 13.9999C15.1186 14.0207 14.894 14.1175 14.7311 14.2716C14.5681 14.4257 14.4785 14.626 14.4798 14.8333V19.1666C14.4798 19.3876 14.5829 19.5996 14.7665 19.7559C14.9502 19.9121 15.1992 19.9999 15.4589 19.9999ZM24.2714 13.9999V19.1666C24.2714 19.3876 24.3746 19.5996 24.5582 19.7559C24.7418 19.9121 24.9909 19.9999 25.2506 19.9999H33.0839C33.3436 19.9999 33.5927 19.9121 33.7763 19.7559C33.9599 19.5996 34.0631 19.3876 34.0631 19.1666V13.3333C34.064 13.2176 34.0366 13.103 33.9827 12.9969C33.9287 12.8907 33.8494 12.7952 33.7498 12.7166C33.6464 12.6382 33.5254 12.5786 33.3941 12.5413C33.2628 12.504 33.1239 12.49 32.986 12.4999L25.1527 13.1666C24.9103 13.1873 24.6857 13.2842 24.5228 13.4383C24.3598 13.5924 24.2702 13.7926 24.2714 13.9999ZM15.361 27.6666L21.236 28.1666C21.4957 28.1666 21.7447 28.0788 21.9284 27.9225C22.112 27.7662 22.2152 27.5543 22.2152 27.3333V22.4999C22.2152 22.2789 22.112 22.067 21.9284 21.9107C21.7447 21.7544 21.4957 21.6666 21.236 21.6666H15.361C15.1013 21.6666 14.8523 21.7544 14.6686 21.9107C14.485 22.067 14.3818 22.2789 14.3818 22.4999V26.8333C14.3818 27.0543 14.485 27.2662 14.6686 27.4225C14.8523 27.5788 15.1013 27.6666 15.361 27.6666ZM33.0839 21.6666H25.2506C24.9909 21.6666 24.7418 21.7544 24.5582 21.9107C24.3746 22.067 24.2714 22.2789 24.2714 22.4999V27.6666C24.2702 27.8739 24.3598 28.0742 24.5228 28.2282C24.6857 28.3823 24.9103 28.4792 25.1527 28.4999L32.986 29.1666C33.1226 29.1783 33.2605 29.1654 33.3908 29.1288C33.5212 29.0922 33.641 29.0326 33.7426 28.9541C33.8442 28.8755 33.9252 28.7796 33.9804 28.6727C34.0356 28.5657 34.0638 28.4501 34.0631 28.3333V22.4999C34.0631 22.2789 33.9599 22.067 33.7763 21.9107C33.5927 21.7544 33.3436 21.6666 33.0839 21.6666Z" fill="#8B50FF"/>
                                      <path d="M36.0212 0H12.5212C11.4824 0 10.4862 0.35119 9.75166 0.976311C9.01714 1.60143 8.60449 2.44928 8.60449 3.33333V36.6667C8.60449 37.5507 9.01714 38.3986 9.75166 39.0237C10.4862 39.6488 11.4824 40 12.5212 40H36.0212C37.0599 40 38.0561 39.6488 38.7907 39.0237C39.5252 38.3986 39.9378 37.5507 39.9378 36.6667V3.33333C39.9378 2.44928 39.5252 1.60143 38.7907 0.976311C38.0561 0.35119 37.0599 0 36.0212 0ZM36.0212 36.6667H12.5212V3.33333H36.0212V36.6667Z" fill="#303C42"/>
                                 <path d="M21.3337 6.66667H27.2087C27.4683 6.66667 27.7174 6.57887 27.901 6.42259C28.0847 6.26631 28.1878 6.05435 28.1878 5.83333C28.1878 5.61232 28.0847 5.40036 27.901 5.24408C27.7174 5.0878 27.4683 5 27.2087 5H21.3337C21.074 5 20.8249 5.0878 20.6413 5.24408C20.4577 5.40036 20.3545 5.61232 20.3545 5.83333C20.3545 6.05435 20.4577 6.26631 20.6413 6.42259C20.8249 6.57887 21.074 6.66667 21.3337 6.66667ZM15.4587 35H17.417C17.6767 35 17.9257 34.9122 18.1094 34.7559C18.293 34.5996 18.3962 34.3877 18.3962 34.1667C18.3962 33.9457 18.293 33.7337 18.1094 33.5774C17.9257 33.4211 17.6767 33.3333 17.417 33.3333H15.4587C15.199 33.3333 14.9499 33.4211 14.7663 33.5774C14.5827 33.7337 14.4795 33.9457 14.4795 34.1667C14.4795 34.3877 14.5827 34.5996 14.7663 34.7559C14.9499 34.9122 15.199 35 15.4587 35ZM33.0837 33.3333H31.1253C30.8656 33.3333 30.6166 33.4211 30.4329 33.5774C30.2493 33.7337 30.1462 33.9457 30.1462 34.1667C30.1462 34.3877 30.2493 34.5996 30.4329 34.7559C30.6166 34.9122 30.8656 35 31.1253 35H33.0837C33.3433 35 33.5924 34.9122 33.776 34.7559C33.9597 34.5996 34.0628 34.3877 34.0628 34.1667C34.0628 33.9457 33.9597 33.7337 33.776 33.5774C33.5924 33.4211 33.3433 33.3333 33.0837 33.3333Z" fill="#303C42"/>
                                 </svg>






                            <div className="px-2 flex flex-row justify-between">
                              <h3 className=" css-5mn5yy">Phone</h3>
                            </div>

                            <span className="css-1lpgd8m px-3 text-[black] text-[10px]">
                                  Android
                                </span>
                            {/* <div
                              className="flex flex-row justify-between bg-[#F7F7F7]"
                              style={{
                                borderBottomLeftRadius: '12px',
                                borderBottomRightRadius: '12px',
                              }}
                            >
                              <div className=" flexCenter p-2">
                                <span className="w-2 h-2 rounded-full bg-[#EB5657]"></span>
                                 <svg
                              className="svgIcon text-[#209653] text-[14px] "
                              focusable="false"
                              viewBox="0 0 24 24"
                              aria-hidden="true"
                              data-testid="ArrowUpwardIcon"
                            >
                              <path d="m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"></path>
                            </svg>

                                <span className="css-1lpgd8m text-[#EB5657] text-[10px]">
                                  CANCELLED (2)
                                </span>
                              </div>
                            </div> */}
                          </section>
                        </div>
                      </div>
                      <div className=" m-1">
                        <div className=" border-[#E5EAF2] rounded-xl border w-60 h-40 bg-white px-8 py-5">
                          <section>
                            {/* <small className="px-2 css-17tn7gx">$</small> */}
                            {/* <svg
                            xmlns="http://www.w3.org/2000/svg"
                             viewBox="0 0 384 512"
                            width="60"
                            height="70"
                             >
                              <path d="M64 0H242.7c17 0 33.3 6.7 45.3 18.7L365.3 96c12 12 18.7 28.3 18.7 45.3V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64C0 28.7 28.7 0 64 0zM96 192c-17.7 0-32 14.3-32 32v32h64V192H96zM64 352h80 96 80V288H240 144 64v64zM320 224c0-17.7-14.3-32-32-32H256v64h64V224zM160 192v64h64V192H160zM288 448c17.7 0 32-14.3 32-32V384H256v64h32zM160 384v64h64V384H160zM64 416c0 17.7 14.3 32 32 32h32V384H64v32z"/>
                            </svg> */}

                              <svg width="38" height="38" viewBox="0 0 38 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                               <path d="M24.2846 2.24878H8.7877C8.20879 2.24878 7.74121 2.71636 7.74121 3.29526V34.7121C7.74121 35.291 8.20879 35.7585 8.7877 35.7585H29.2053C29.7842 35.7585 30.2518 35.291 30.2518 34.7121V8.21597C30.2518 7.93394 30.1404 7.67417 29.9475 7.47378L25.0193 2.54565C24.8264 2.35269 24.5666 2.24878 24.2846 2.24878Z" fill="white"/>
                                  <path d="M23.8543 4.3418H9.8418V5.65547H12.6102C13.1891 5.65547 13.6566 6.12305 13.6566 6.70195C13.6566 7.28086 13.1891 7.74844 12.6102 7.74844H9.8418V10.3238H10.5098C11.0887 10.3238 11.5562 10.7914 11.5562 11.3703C11.5562 11.9492 11.0887 12.4168 10.5098 12.4168H9.8418V33.6656H28.1664V8.65391L23.8543 4.3418Z" fill="#D1C3FC"/>
                                  <path d="M31.432 5.98955L26.5039 1.06143C25.9102 0.467676 25.1234 0.141113 24.2848 0.141113H8.78789C7.05859 0.148535 5.64844 1.55869 5.64844 3.28799V34.7048C5.64844 36.4341 7.05859 37.8442 8.78789 37.8442H29.2055C30.9348 37.8442 32.3449 36.4341 32.3449 34.7048V8.20869C32.3523 7.37744 32.0258 6.5833 31.432 5.98955ZM30.2594 34.7122C30.2594 35.2911 29.7918 35.7587 29.2129 35.7587H8.78789C8.20898 35.7587 7.74141 35.2911 7.74141 34.7122V3.28799C7.74141 2.70908 8.20898 2.2415 8.78789 2.2415H24.2848C24.5668 2.2415 24.8266 2.35283 25.027 2.5458L29.9551 7.47393C30.1555 7.67432 30.2594 7.93408 30.2594 8.21611V34.7122Z" fill="#194F82"/>
                             <path d="M24.2842 16.6548H13.7154C12.1346 16.6548 10.8506 17.9388 10.8506 19.5196V30.0884C10.8506 31.6692 12.1346 32.9532 13.7154 32.9532H24.2842C25.865 32.9532 27.149 31.6692 27.149 30.0884V19.5196C27.149 17.9388 25.865 16.6548 24.2842 16.6548ZM18.0424 31.0384H13.7154C13.1885 31.0384 12.758 30.6079 12.758 30.081V25.754H18.0424V31.0384ZM18.0424 23.8466H12.7654V19.5196C12.7654 18.9927 13.1959 18.5622 13.7229 18.5622H18.0498V23.8466H18.0424ZM25.2342 30.0884C25.2342 30.6153 24.8037 31.0458 24.2768 31.0458H19.9498V28.3071H25.2342V30.0884ZM25.2342 26.3923H19.9498V23.2083H25.2342V26.3923ZM25.2342 21.3009H19.9498V18.5622H24.2768C24.8037 18.5622 25.2342 18.9927 25.2342 19.5196V21.3009Z" fill="#194F82"/>
                               <path d="M19.9574 23.2155H25.2418V26.3995H19.9574V23.2155ZM24.2324 18.562H19.9574V21.3007H25.2344V19.5417C25.2047 19.0073 24.7668 18.5843 24.2324 18.562ZM18.0426 31.0382V25.7538H12.7656V30.0659C12.7953 30.5409 13.1367 30.9269 13.5895 31.0233C13.634 31.0308 13.6785 31.0382 13.723 31.0382H18.0426ZM12.7656 19.5417V23.8464H18.05V18.562H13.775C13.2332 18.5843 12.7953 19.0073 12.7656 19.5417ZM25.2344 30.0733V28.3069H19.95V31.0456H24.277C24.3215 31.0456 24.366 31.0382 24.4105 31.0308C24.8633 30.9343 25.2047 30.5409 25.2344 30.0733Z" fill="#FFC10D"/>
                                     </svg>

                            <div className="px-2 flex flex-row justify-between">
                              <h3 className=" css-5mn5yy">Sim Card</h3>
                            </div>

                            <span className="css-1lpgd8m px-4 text-[#767676] text-[10px]">
                                  Android
                                </span>
                            {/* <div
                              className="flex flex-row justify-between bg-[#F7F7F7]"
                              style={{
                                borderBottomLeftRadius: '12px',
                                borderBottomRightRadius: '12px',
                              }}
                            >
                              <div className=" flexCenter p-2">
                                <span className="w-2 h-2 rounded-full bg-[#767676]"></span>
                                 <svg
                              className="svgIcon text-[#209653] text-[14px] "
                              focusable="false"
                              viewBox="0 0 24 24"
                              aria-hidden="true"
                              data-testid="ArrowUpwardIcon"
                            >
                              <path d="m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"></path>
                            </svg>

                                <span className="css-1lpgd8m text-[#767676] text-[10px]">
                                  TOTAL (10)
                                </span>
                              </div>
                            </div> */}
                          </section>
                        </div>
                      </div>
                    {/* </section> */}
                  </section>
                 {/* </div> */}
              {/* </div> */}

              {/* <div className="flex px-6">
                {leadsTyper == 'inProgress' && (
                  <span className="inline-flex p-1 border bg-gray-200 rounded-md">
                    <button
                      className={`px-2 py-1  rounded ${
                        ready ? 'bg-white shadow' : ''
                      }`}
                      onClick={() => setReady(true)}
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-6 w-6 text-gray-600"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2m0 10a2 2 0 002 2h2a2 2 0 002-2M9 7a2 2 0 012-2h2a2 2 0 012 2m0 10V7m0 10a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 00-2-2h-2a2 2 0 00-2 2"
                        />
                      </svg>
                    </button>
                    <button
                      className={`px-2 py-1  rounded ${
                        !ready ? 'bg-white shadow' : ''
                      }`}
                      onClick={() => setReady(false)}
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-6 w-6 text-gray-600"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"
                        />
                      </svg>
                    </button>
                  </span>
                )}
                <></>
              </div> */}
            {/* </div> */}

            <MetaTags title="ExecutiveHome" description="ExecutiveHome page" />

            {!ready && (
              <div className="overflow-hidden  px-1 pb-1 rounded-md">
                <div className="flex flex-col app-bg-white-1  pb-10">
                  <div className="flex flex-row pt-[1px]">
                    <span className="text-lg font-bold app-color-black"></span>
                  </div>
                  <div className=" bg-[#F7F7F7] rounded-t-md">
                    <div className=" ">
                      {/* <ul
                        className="flex flex-wrap -mb-px "
                        id="myTab"
                        data-tabs-toggle="#myTabContent"
                        role="tablist"
                      >
                        {tabHeadFieldsA.map((fieldHead, i) => {
                          return (
                            <li key={i} className="mr-2" role="presentation">
                              <button
                                className={`inline-block pt-3 pb-2  mx-2 text-sm font-medium text-center text-[#4f5861] rounded-t-lg border-b-[3px]  hover:text-gray-600 hover:border-[#1A91EB] dark:text-gray-400 dark:hover:text-gray-300  ${
                                  value === fieldHead?.val
                                    ? 'border-[#1A91EB] text-gray-800'
                                    : 'border-transparent'
                                }`}
                                type="button"
                                role="tab"
                                onClick={() => setValue(fieldHead?.val)}
                              >
                                <span
                                  className={`font-PlayFair font-bold ${
                                    value === fieldHead.val
                                      ? 'text-[#0080ff] text-gray-800'
                                      : ''
                                  }`}
                                >
                                  {' '}
                                  {`${fieldHead.lab} `}
                                </span>
                                 <span className="bg-gray-100 text-gray-800 px-2 py-1 rounded-full ml-[4px] text-[10px] ">
                                  {rowsCounter(leadsFetchedData, d.val).length}
                                  {statusSepA[0][d.val]?.length || 0}
                                  {
                                    rowsCounter(
                                      leadsFetchedData,
                                      fieldHead?.val
                                    ).length
                                  }
                                </span>

                        <div className="px-2 mt-1 text-[9px] text-black  rounded-full">
                          <span className="bg-gray-100 px-2 py-1 rounded-full">
                            {rowsCounter(leadsFetchedData, d.val).length}
                          </span>
                        </div>
                              </button>
                            </li>
                          )
                        })}
                      </ul> */}
                    </div>
                  </div>
                  {/* <div className="flex flex-row bg-white px-[4px] py-2 relative"> */}
                     {/* <div className="flex w-full  "> */}
                      {/* <table className="w-full pt-[1px]"> */}
                        {/* <thead className=""> */}
                          {/* <tr className="p-2"> */}
                            {/* <th className="w-2"></th> */}
                             {/* <th className="text-left text-xs app-color-black py-2">
                              <span className="ml-4">FROM</span>
                            </th>
                            <th className="text-left text-xs app-color-black py-2">
                               <span className="ml-4">To</span>
                            </th>
                            <th className="text-left text-xs app-color-black py-2">
                              TRANSACTION DETAILS
                            </th>
                            <th className="text-right text-xs app-color-black py-2">
                              <span className="mr-10">AMOUNT</span>
                            </th>
                            <th className="text-right text-xs app-color-black py-2">
                              <span className="mr-10">STATUS</span>
                            </th>

                            <th className="text-left text-xs app-color-black py-2">
                              COMMENTS
                            </th> */}

                            {/* <th></th> */}
                          {/* </tr> */}
                        {/* </thead> */}
                        <tbody className="p-2">
                          {leadsFetchedData.map((finData, i) => (
                            <tr
                              className="app-border-1 border-y border-slate-200 "
                              key={i}
                              onClick={() => viewTransaction(finData)}
                            >
                              {/* <td className="pl-3 "> */}
                                {/* <div className="flex justify-center text-right items-center rounded-md w-2 h-8 app-bg-yellow-2 app-color-yellow-1 text-xs font-semibold">
                                  {i + 1}
                                </div> */}
                                {/* <div
                                className={`${
                                  finData?.status === 'cleared'
                                    ? 'bg-green-700'
                                    : finData?.status === 'rejected'
                                    ? 'bg-yellow-600'
                                    : 'bg-violet-600'
                                }   w-24 text-xs font-semibold px-3 py-0.5 rounded-br-md rounded-tl-md text-white`}
                              >
                                {finData?.status?.toLocaleUpperCase()}
                              </div> */}
                              {/* </td> */}
                              {/* <td>
                                <div className="flex flex-row py-2 ml-4">
                                  <div className="mr-2 w-[3px] rounded-2xl  bg-violet-300 "></div>
                                  <div className="flex flex-col">
                                    <span className="font-semibold text-sm app-color-black">
                                      {finData?.fromObj?.name || 'Vikram Bose'}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {'52346673647'}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {finData?.fromObj?.bankName}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {finData?.fromObj?.branch}
                                    </span>
                                  </div>
                                </div>
                              </td> */}
                              {/* <td>
                                <div className="flex flex-row ml-4 py-2">
                                  <div className="mr-2 w-[3px] rounded-2xl bg-violet-300  "></div>
                                  <div className="flex flex-col">
                                    <span className="font-semibold text-sm app-color-black">
                                      {finData?.toAccount?.name}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                       {finData?.toAccount?.accountNo}
                                      {finData?.towardsBankDocId}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {finData?.toAccount?.bankName}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {finData?.toAccount?.branch}
                                    </span>
                                  </div>
                                </div>
                              </td> */}
                              {/* <td>
                                <div className="flex flex-row py-2">
                                   <div className="mr-2 w-[3px]  bg-gray-100 "></div>
                                  <div className="flex flex-col">
                                    <span className="font-semibold text-sm app-color-black">
                                      {finData?.mode}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {finData?.transactionNo}
                                    </span>
                                    <span className="font-normal text-xs app-color-gray-1">
                                      {finData?.dated}
                                    </span>
                                  </div>
                                </div>
                              </td> */}
                              {/* <td className="text-right">
                                <span className="text-right font-semibold text-sm app-color-gray-1 mr-10">
                                  Rs {finData?.amount}
                                </span>
                              </td> */}

                              {/* <td>
                                <span className="ml-3 font-normal text-md app-color-gray-1">
                                  {finData?.status}
                                </span>
                              </td> */}
                              {/* <td>
                                <span className="font-semibold text-sm app-color-black">
                                  NA
                                </span>
                              </td> */}
                            </tr>
                          ))}
                        </tbody>
                      {/* </table> */}
                    {/* </div> */}
                  {/* </div> */}
                </div>
              </div>
            )}

            {/* {!ready && (
              <FinanceTableView
                leadsFetchedData={leadsFetchedData}
                setisImportLeadsOpen={setisImportLeadsOpen}
                selUserProfileF={selUserProfileF}
                leadsTyper={leadsTyper}
              />
            )} */}
          </div>
        </div>
      </div>
      {/* <SiderForm
        open={isImportLeadsOpen}
        setOpen={setisImportLeadsOpen}
        title={'Transaction'}
        customerDetails={selUserProfile}
        widthClass="max-w-md"
        transactionData={transactionData}
      /> */}
    </>
  )
}

export default OnBoarding


















